    scalar Date
    schema {
        query: Query
    }

    type Query {
        getSessions(first: Int, last:Int): [Session]!
        getSession(session_id: ID, date:Date): Session
        getTalks(session_id: ID, talk_id: ID, date: Date, mp_id: ID, mp_name: String): [Talk]!
        getDocs(docname: String, date: Date, session_id: ID): [Doc]!
        getContent(session_id: ID, date: Date): [String]!
        getMissing(session_id: ID, date: Date, mp_id: ID, mp_name: String): [Missing]!
    }

    type Session {
        id: ID!
        title: String!
        type: String!
        periode: Int!
        place: String!
        publisher: String!
        date: Date!
        url: String
        docs: [Doc]
        content: [String]
        talks(first: Int, last: Int): [Talk]
        missing: [Missing]
    }

    type Doc{
        docname: String!
        url: String!
        date: Date!
        session_ids: [Int]!
    }

    type MP{
        mp_id: ID!
        f_name: String!
        s_name: String!
        party: String
        role: String
        talks: [Talk]
    }

    type Talk{
        talk_id: ID!
        name: String!
        mp_id: ID!
        date: Date!
        session_id: ID!
        talk(with_comments: Boolean): String!

    }

    type Missing{
        session_id: ID!
        name: String!
        mp_id: ID #To MP
    }